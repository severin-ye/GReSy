# 游戏玩家匹配推荐系统文档

## 系统概述
这是一个基于用户特征的游戏玩家匹配推荐系统。系统通过分析用户的游戏偏好、个人特征和游戏习惯等多个维度，为用户推荐最合适的游戏伙伴。

## 核心功能
1. 用户档案管理
2. 多维度特征匹配
3. 基于性别偏好的优先级匹配
4. 特征贡献度分析

## 系统架构

### 1. UserProfile 类
用于存储用户的基本信息和偏好。

主要属性：
- user_id：用户唯一标识符
- games：用户玩的游戏列表
- gender：用户性别
- gender_preference：性别偏好列表
- play_region：游戏服务器区域
- play_time：常规游戏时间段
- mbti：MBTI性格类型
- zodiac：星座
- game_experience：游戏经验水平
- online_status：在线状态
- game_style：游戏风格

### 2. UserMatchingSystem 类
实现用户匹配算法的核心类。

主要功能：
- 用户特征编码
- 相似度计算
- 匹配推荐
- 特征贡献度分析

#### 特征权重分配
系统对不同特征设定了以下权重：
- 游戏偏好：80%
- 性别特征：20%
- 游戏区服：15%
- 游戏时间：10%
- MBTI性格：7.5%
- 游戏经验：7.5%
- 游戏风格：5%
- 星座：2.5%
- 在线状态：2.5%

## 匹配算法流程

1. **预处理阶段**
   - 将用户添加到系统
   - 对分类特征进行编码
   - 标准化特征数据

2. **匹配计算阶段**
   - 筛选共同游戏的用户
   - 计算用户间的特征相似度
   - 应用性别偏好权重
   - 计算特征贡献度

3. **结果排序阶段**
   - 按性别偏好优先级分组
   - 根据总体相似度排序
   - 返回指定数量的最佳匹配

## 使用示例

# 创建匹配系统实例
matching_system = UserMatchingSystem()

# 添加用户档案
user = UserProfile(
    user_id="user1",
    games=["LOL"],
    gender="男",
    gender_preference=["女", "男", "赛博人"],
    play_region="亚服",
    play_time="晚上",
    mbti="INTJ",
    zodiac="射手座",
    game_experience="高超",
    online_status="在线",
    game_style="激进"
)
matching_system.add_user(user)

# 查找匹配
matches = matching_system.find_matches(user, top_n=20) 